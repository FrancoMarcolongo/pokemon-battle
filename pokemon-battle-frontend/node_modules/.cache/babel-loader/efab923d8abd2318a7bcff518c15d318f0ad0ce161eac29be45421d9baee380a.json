{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Typography,Box}from'@mui/material';import PokemonList from'./components/pokemonList';import BattleArena from'./components/battleArena';import BattleResultBanner from'./components/battleResultBanner';import{pokemonService}from'./services/pokemon-service';import{battleService}from'./services/battle-service';import ErrorBanner from'./components/errorBanner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[pokemons,setPokemons]=useState([]);const[selectedPokemon,setSelectedPokemon]=useState(null);const[opponent,setOpponent]=useState(null);const[battleResult,setBattleResult]=useState(null);const[error,setError]=useState(null);const[loading,setLoading]=useState(false);useEffect(()=>{const fetchPokemons=async()=>{try{const pokemons=await pokemonService.fetchPokemons();setPokemons(pokemons);}catch(error){console.error('Error fetching Pokémon:',error);}};void fetchPokemons();},[]);const handlePokemonSelect=pokemon=>{setSelectedPokemon(pokemon);setBattleResult(null);const remainingPokemon=pokemons.filter(p=>p.id!==pokemon.id);const randomOpponent=remainingPokemon[Math.floor(Math.random()*remainingPokemon.length)];setOpponent(randomOpponent);};const startBattle=async()=>{if(!selectedPokemon||!opponent)return;setError(null);setLoading(true);try{const battleResult=await battleService.startBattle(selectedPokemon.id,opponent.id);setBattleResult(battleResult);}catch(error){setError('Error starting battle');console.error('Error starting battle:',error);}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{margin:'32px auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",gutterBottom:true,children:\"Battle of Pokemon\"}),/*#__PURE__*/_jsx(Box,{sx:{marginBottom:'16px'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Select your pokemon\"})}),/*#__PURE__*/_jsx(PokemonList,{pokemons:pokemons,onSelect:handlePokemonSelect}),battleResult&&/*#__PURE__*/_jsx(BattleResultBanner,{winner:battleResult.winner.id===(selectedPokemon===null||selectedPokemon===void 0?void 0:selectedPokemon.id)?selectedPokemon.name:(opponent===null||opponent===void 0?void 0:opponent.name)||''}),error&&/*#__PURE__*/_jsx(ErrorBanner,{error:error}),selectedPokemon&&opponent&&/*#__PURE__*/_jsx(BattleArena,{pokemon1:selectedPokemon,pokemon2:opponent,onBattleStart:startBattle,loading:loading})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","PokemonList","BattleArena","BattleResultBanner","pokemonService","battleService","ErrorBanner","jsx","_jsx","jsxs","_jsxs","App","pokemons","setPokemons","selectedPokemon","setSelectedPokemon","opponent","setOpponent","battleResult","setBattleResult","error","setError","loading","setLoading","fetchPokemons","console","handlePokemonSelect","pokemon","remainingPokemon","filter","p","id","randomOpponent","Math","floor","random","length","startBattle","maxWidth","sx","margin","children","variant","gutterBottom","marginBottom","onSelect","winner","name","pokemon1","pokemon2","onBattleStart"],"sources":["C:/Users/franc/Programacion/PhinxLab/pokemon-battle-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box } from '@mui/material';\nimport { Pokemon } from './schema/pokemon/pokemon.entity';\nimport { BattleResult } from './schema/battle-result/battle-result.entity';\nimport PokemonList from './components/pokemonList';\nimport BattleArena from './components/battleArena';\nimport BattleResultBanner from './components/battleResultBanner';\nimport { pokemonService } from './services/pokemon-service';\nimport { battleService } from './services/battle-service';\nimport ErrorBanner from './components/errorBanner';\n\nconst App: React.FC = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  const [selectedPokemon, setSelectedPokemon] = useState<Pokemon | null>(null);\n  const [opponent, setOpponent] = useState<Pokemon | null>(null);\n  const [battleResult, setBattleResult] = useState<BattleResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const pokemons = await pokemonService.fetchPokemons();\n        setPokemons(pokemons);\n      } catch (error) {\n        console.error('Error fetching Pokémon:', error);\n      }\n    }\n\n    void fetchPokemons();\n  }, []);\n\n  const handlePokemonSelect = (pokemon: Pokemon) => {\n    setSelectedPokemon(pokemon);\n    setBattleResult(null);\n    const remainingPokemon = pokemons.filter(p => p.id !== pokemon.id);\n    const randomOpponent = remainingPokemon[Math.floor(Math.random() * remainingPokemon.length)];\n    setOpponent(randomOpponent);\n  };\n\n  const startBattle = async () => {\n    if (!selectedPokemon || !opponent) return;\n    setError(null);\n    setLoading(true);\n    try{\n      const battleResult = await battleService.startBattle(selectedPokemon.id, opponent.id);\n      setBattleResult(battleResult);\n    } catch (error) {\n      setError('Error starting battle');\n      console.error('Error starting battle:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ \n        margin: '32px auto',\n      }}\n    >\n      <Typography variant=\"h3\" gutterBottom>\n        Battle of Pokemon\n      </Typography>\n      <Box sx={{ marginBottom: '16px' }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Select your pokemon\n        </Typography>\n      </Box>\n      <PokemonList pokemons={pokemons} onSelect={handlePokemonSelect} />\n      {battleResult && (\n        <BattleResultBanner \n          winner={\n            battleResult.winner.id === selectedPokemon?.id ? selectedPokemon.name : opponent?.name || ''\n          }\n        />\n      )}\n      {error && (\n        <ErrorBanner error={error} />\n      )}\n      {selectedPokemon && opponent && (\n        <BattleArena\n          pokemon1={selectedPokemon}\n          pokemon2={opponent}\n          onBattleStart={startBattle}\n          loading={loading}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
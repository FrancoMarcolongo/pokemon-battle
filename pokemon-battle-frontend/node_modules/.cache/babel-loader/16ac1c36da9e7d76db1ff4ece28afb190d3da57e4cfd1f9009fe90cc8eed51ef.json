{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Programacion\\\\PhinxLab\\\\pokemon-battle-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport axios from 'axios';\nimport PokemonList from './components/pokemonList';\nimport BattleArena from './components/battleArena';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [selectedPokemon, setSelectedPokemon] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  const [battleResult, setBattleResult] = useState(null);\n  useEffect(() => {\n    // Fetch Pokémon list from your backend\n    // replace url with environment variable \"BACKEND_URL\"\n    axios.get(`${process.env.REACT_APP_BACKEND_URL}/pokemons`).then(response => setPokemons(response.data)).catch(error => console.error('Error fetching Pokémon:', error));\n  }, []);\n  const handlePokemonSelect = pokemon => {\n    setSelectedPokemon(pokemon);\n    // Randomly select an opponent\n    const remainingPokemon = pokemons.filter(p => p.id !== pokemon.id);\n    const randomOpponent = remainingPokemon[Math.floor(Math.random() * remainingPokemon.length)];\n    setOpponent(randomOpponent);\n  };\n  const startBattle = async () => {\n    if (!selectedPokemon || !opponent) return;\n    try {\n      const response = await axios.post('http://localhost:3000/battle', {\n        pokemon1Id: selectedPokemon.id,\n        pokemon2Id: opponent.id\n      });\n      setBattleResult(response.data);\n    } catch (error) {\n      console.error('Error starting battle:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Battle of Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PokemonList, {\n      pokemons: pokemons,\n      onSelect: handlePokemonSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), selectedPokemon && opponent && /*#__PURE__*/_jsxDEV(BattleArena, {\n      pokemon1: selectedPokemon,\n      pokemon2: opponent,\n      onBattleStart: startBattle,\n      battleResult: battleResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9JLhdE5dgwibJCLwYXmQAbtzSZE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","axios","PokemonList","BattleArena","jsxDEV","_jsxDEV","App","_s","pokemons","setPokemons","selectedPokemon","setSelectedPokemon","opponent","setOpponent","battleResult","setBattleResult","get","process","env","REACT_APP_BACKEND_URL","then","response","data","catch","error","console","handlePokemonSelect","pokemon","remainingPokemon","filter","p","id","randomOpponent","Math","floor","random","length","startBattle","post","pokemon1Id","pokemon2Id","maxWidth","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","pokemon1","pokemon2","onBattleStart","_c","$RefreshReg$"],"sources":["C:/Users/franc/Programacion/PhinxLab/pokemon-battle-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box } from '@mui/material';\nimport axios from 'axios';\nimport { Pokemon } from './schema/pokemon/pokemon.entity';\nimport { BattleResult } from './schema/battle-result/battle-result.entity';\nimport PokemonList from './components/pokemonList';\nimport BattleArena from './components/battleArena';\n\nconst App: React.FC = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  const [selectedPokemon, setSelectedPokemon] = useState<Pokemon | null>(null);\n  const [opponent, setOpponent] = useState<Pokemon | null>(null);\n  const [battleResult, setBattleResult] = useState<BattleResult | null>(null);\n\n  useEffect(() => {\n    // Fetch Pokémon list from your backend\n    // replace url with environment variable \"BACKEND_URL\"\n    axios.get<Pokemon[]>(`${process.env.REACT_APP_BACKEND_URL}/pokemons`)\n      .then(response => setPokemons(response.data))\n      .catch(error => console.error('Error fetching Pokémon:', error));\n  }, []);\n\n  const handlePokemonSelect = (pokemon: Pokemon) => {\n    setSelectedPokemon(pokemon);\n    // Randomly select an opponent\n    const remainingPokemon = pokemons.filter(p => p.id !== pokemon.id);\n    const randomOpponent = remainingPokemon[Math.floor(Math.random() * remainingPokemon.length)];\n    setOpponent(randomOpponent);\n  };\n\n  const startBattle = async () => {\n    if (!selectedPokemon || !opponent) return;\n\n    try {\n      const response = await axios.post<BattleResult>('http://localhost:3000/battle', {\n        pokemon1Id: selectedPokemon.id,\n        pokemon2Id: opponent.id\n      });\n      setBattleResult(response.data);\n    } catch (error) {\n      console.error('Error starting battle:', error);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h2\" align=\"center\" gutterBottom>\n        Battle of Pokemon\n      </Typography>\n      <PokemonList pokemons={pokemons} onSelect={handlePokemonSelect} />\n      {selectedPokemon && opponent && (\n        <BattleArena\n          pokemon1={selectedPokemon}\n          pokemon2={opponent}\n          onBattleStart={startBattle}\n          battleResult={battleResult}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
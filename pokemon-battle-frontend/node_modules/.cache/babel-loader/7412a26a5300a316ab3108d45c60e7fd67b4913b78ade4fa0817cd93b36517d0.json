{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Typography}from'@mui/material';import axios from'axios';import PokemonList from'./components/pokemonList';import BattleArena from'./components/battleArena';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[pokemons,setPokemons]=useState([]);const[selectedPokemon,setSelectedPokemon]=useState(null);const[opponent,setOpponent]=useState(null);const[battleResult,setBattleResult]=useState(null);useEffect(()=>{// Fetch Pokémon list from your backend\n// replace url with environment variable \"BACKEND_URL\"\naxios.get(`${process.env.REACT_APP_BACKEND_URL}/pokemons`).then(response=>setPokemons(response.data)).catch(error=>console.error('Error fetching Pokémon:',error));},[]);const handlePokemonSelect=pokemon=>{setSelectedPokemon(pokemon);// Randomly select an opponent\nconst remainingPokemon=pokemons.filter(p=>p.id!==pokemon.id);const randomOpponent=remainingPokemon[Math.floor(Math.random()*remainingPokemon.length)];setOpponent(randomOpponent);};const startBattle=async()=>{if(!selectedPokemon||!opponent)return;try{const response=await axios.post('http://localhost:3000/battle',{pokemon1Id:selectedPokemon.id,pokemon2Id:opponent.id});setBattleResult(response.data);}catch(error){console.error('Error starting battle:',error);}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",align:\"center\",gutterBottom:true,children:\"Battle of Pokemon\"}),/*#__PURE__*/_jsx(PokemonList,{pokemons:pokemons,onSelect:handlePokemonSelect}),selectedPokemon&&opponent&&/*#__PURE__*/_jsx(BattleArena,{pokemon1:selectedPokemon,pokemon2:opponent,onBattleStart:startBattle,battleResult:battleResult})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","axios","PokemonList","BattleArena","jsx","_jsx","jsxs","_jsxs","App","pokemons","setPokemons","selectedPokemon","setSelectedPokemon","opponent","setOpponent","battleResult","setBattleResult","get","process","env","REACT_APP_BACKEND_URL","then","response","data","catch","error","console","handlePokemonSelect","pokemon","remainingPokemon","filter","p","id","randomOpponent","Math","floor","random","length","startBattle","post","pokemon1Id","pokemon2Id","maxWidth","children","variant","align","gutterBottom","onSelect","pokemon1","pokemon2","onBattleStart"],"sources":["C:/Users/franc/Programacion/PhinxLab/pokemon-battle-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box } from '@mui/material';\nimport axios from 'axios';\nimport { Pokemon } from './schema/pokemon/pokemon.entity';\nimport { BattleResult } from './schema/battle-result/battle-result.entity';\nimport PokemonList from './components/pokemonList';\nimport BattleArena from './components/battleArena';\n\nconst App: React.FC = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  const [selectedPokemon, setSelectedPokemon] = useState<Pokemon | null>(null);\n  const [opponent, setOpponent] = useState<Pokemon | null>(null);\n  const [battleResult, setBattleResult] = useState<BattleResult | null>(null);\n\n  useEffect(() => {\n    // Fetch Pokémon list from your backend\n    // replace url with environment variable \"BACKEND_URL\"\n    axios.get<Pokemon[]>(`${process.env.REACT_APP_BACKEND_URL}/pokemons`)\n      .then(response => setPokemons(response.data))\n      .catch(error => console.error('Error fetching Pokémon:', error));\n  }, []);\n\n  const handlePokemonSelect = (pokemon: Pokemon) => {\n    setSelectedPokemon(pokemon);\n    // Randomly select an opponent\n    const remainingPokemon = pokemons.filter(p => p.id !== pokemon.id);\n    const randomOpponent = remainingPokemon[Math.floor(Math.random() * remainingPokemon.length)];\n    setOpponent(randomOpponent);\n  };\n\n  const startBattle = async () => {\n    if (!selectedPokemon || !opponent) return;\n\n    try {\n      const response = await axios.post<BattleResult>('http://localhost:3000/battle', {\n        pokemon1Id: selectedPokemon.id,\n        pokemon2Id: opponent.id\n      });\n      setBattleResult(response.data);\n    } catch (error) {\n      console.error('Error starting battle:', error);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h2\" align=\"center\" gutterBottom>\n        Battle of Pokemon\n      </Typography>\n      <PokemonList pokemons={pokemons} onSelect={handlePokemonSelect} />\n      {selectedPokemon && opponent && (\n        <BattleArena\n          pokemon1={selectedPokemon}\n          pokemon2={opponent}\n          onBattleStart={startBattle}\n          battleResult={battleResult}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}